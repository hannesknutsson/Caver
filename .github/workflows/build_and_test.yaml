name: Build & test

on:
  pull_request:
  #This badboy enables us to run this flow from the GitHub UI
  workflow_dispatch:

env:
  # Release tag associated with version of Detekt to be installed
  # SARIF support (required for this workflow) was introduced in Detekt v1.15.0
  DETEKT_RELEASE_TAG: v1.15.0

jobs:
  prepare:
    name: Prepare PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.44.0/ktlint
          chmod a+x ktlint
          sudo mv ktlint /usr/local/bin/
      - name: Format Kotlin classes
        run: |
          ktlint --relative --format
        continue-on-error: true
      - name: Update Helm chart
        run: |
          cd charts/caver-backend/ci
          sed -i "/tag:/c\  tag: hannesknutsson/caver:$GITHUB_SHA" dev-values.yaml
          cd -
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: hannes.knutsson@protonmail.com
          message: 'Automatic Kotlin formatting and update of Helm values'
          add: '*'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build & test with Maven
        run: mvn -B package --file pom.xml
      - name: Build caver-api DockerFile
        run: docker build caver-api/ --file caver-api/Dockerfile
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Build the Docker image
        run: docker build caver-api --tag hannesknutsson/caver:$GITHUB_SHA
      - name: Log in to DockerHub
        env:
          DOCKERHUB_AUTH: ${{ secrets.DOCKERHUB_AUTH }}
        run: docker login -u hannesknutsson -p $DOCKERHUB_AUTH
      - name: Push image to DockerHub
        run: docker push hannesknutsson/caver:$GITHUB_SHA

  detekt:
    name: Detekt
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Detekt download URL
        id: detekt_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api graphql --field tagName=$DETEKT_RELEASE_TAG --raw-field query='
            query getReleaseAssetDownloadUrl($tagName: String!) {
              repository(name: "detekt", owner: "detekt") {
                release(tagName: $tagName) {
                  releaseAssets(name: "detekt", first: 1) {
                    nodes {
                      downloadUrl
                    }
                  }
                  tagCommit {
                    oid
                  }
                }
              }
            }
          ' 1> gh_response.json
          
          cat gh_response.json
          
          DETEKT_RELEASE_SHA=$(jq --raw-output '.data.repository.release.tagCommit.oid' gh_response.json)
          if [ $DETEKT_RELEASE_SHA != "37f0a1d006977512f1f216506cd695039607c3e5" ]; then
            echo "Release tag doesn't match expected commit SHA"
            echo "Expected '37f0a1d006977512f1f216506cd695039607c3e5' but got '$DETEKT_RELEASE_SHA'"
            exit 1
          fi
          
          DETEKT_DOWNLOAD_URL=$(jq --raw-output '.data.repository.release.releaseAssets.nodes[0].downloadUrl' gh_response.json)
          echo "DETEKT_DOWNLOAD_URL=$DETEKT_DOWNLOAD_URL" >> $GITHUB_ENV
      - name: Setup Detekt
        run: |
          dest=$( mktemp -d )
          echo $DETEKT_DOWNLOAD_URL
          curl --request GET \
            --url $DETEKT_DOWNLOAD_URL \
            --silent \
            --location \
            --output $dest/detekt
          chmod a+x $dest/detekt
          echo $dest >> $GITHUB_PATH
      - name: Run Detekt
        continue-on-error: true
        run: |
          detekt --input ${{ github.workspace }} --report sarif:${{ github.workspace }}/detekt.sarif.json
      # Modifies the SARIF output produced by Detekt so that absolute URIs are relative
      # This is so we can easily map results onto their source files
      # This can be removed once relative URI support lands in Detekt: https://git.io/JLBbA
      - name: Make artifact location URIs relative
        continue-on-error: true
        run: |
          echo "$(
            jq \
              --arg github_workspace ${{ github.workspace }} \
              '. | ( .runs[].results[].locations[].physicalLocation.artifactLocation.uri |= if test($github_workspace) then .[($github_workspace | length | . + 1):] else . end )' \
              ${{ github.workspace }}/detekt.sarif.json
          )" > ${{ github.workspace }}/detekt.sarif.json

      # Uploads results to GitHub repository using the upload-sarif action
      - uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: ${{ github.workspace }}/detekt.sarif.json
          checkout_path: ${{ github.workspace }}

  helm:
    name: Helm
    needs:
      - prepare

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.2.1

#      - name: Run chart-testing (list-changed)
#        id: list-changed
#        run: |
#          changed=$(ct list-changed --target-branch development)
#          if [[ -n "$changed" ]]; then
#            echo "::set-output name=changed::true"
#          fi

      - name: Run chart-testing (lint)
        run: ct lint --all
#        if: steps.list-changed.outputs.changed == 'true'

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
#        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --all
#        if: steps.list-changed.outputs.changed == 'true'

